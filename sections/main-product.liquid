{% assign current_variant = product.selected_or_first_available_variant %}

<script>
  window.variants = {{ product.variants | json }};
</script>

<div class="max-w-7xl mx-auto px-4 py-8 sm:px-6 lg:px-8">
  <div class="lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-start">
    <div class="flex flex-col">
      <div class="aspect-w-1 aspect-h-1 w-full">
        <img id="main-product-image" src="{{ product.images.first | img_url: 'large' }}" alt="{{ product.featured_image.alt | escape }}" class="w-full h-full object-cover rounded-lg">
      </div>
      
      {% if product.images.size > 1 %}
        <div class="mt-4 grid grid-cols-4 gap-4">
          {% for image in product.images %}
            {% assign image_id = image.id %}
            <button 
              class="aspect-w-1 aspect-h-1 relative rounded-lg overflow-hidden hover:opacity-75 transition-opacity {% if forloop.first %}ring-2 ring-gray-900{% endif %}"
              onclick="updateMainImage(this, '{{ image | img_url: 'large' }}', '{{ image.alt | escape }}')"
              data-image-id="{{ image_id }}"
            >
              <img src="{{ image | img_url: '150x' }}" alt="{{ image.alt | escape }}" class="w-full h-full object-cover">
            </button>
          {% endfor %}
        </div>
      {% endif %}
    </div>
    
    <div class="mt-10 px-4 sm:px-0 sm:mt-16 lg:mt-0">
      <h1 class="text-3xl font-bold tracking-tight text-gray-900">{{ product.title }}</h1>
      
      <div class="mt-3">
        <h2 class="sr-only">Product information</h2>
        <p class="text-3xl tracking-tight text-gray-900">{{ current_variant.price | money }}</p>
      </div>

      <form method="post" action="/cart/add" id="product-form" is="product-form" class="mt-6">
        <input type="hidden" name="id" id="variant-id" value="{{ current_variant.id }}">
        
        {% for option in product.options_with_values %}
          <div class="mt-6">
            <h3 class="text-sm font-medium text-gray-900">{{ option.name }}</h3>
            <div class="mt-2">
              <select 
                name="options[{{ option.name }}]" 
                class="block w-full rounded-md border border-gray-300 py-2 px-3 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:border-gray-500 hover:border-gray-400 transition-colors"
                onchange="handleVariantChange(event)"
                data-index="{{ forloop.index0 }}"
              >
                {% for value in option.values %}
                  <option 
                    value="{{ value }}"
                    {% if current_variant.options[forloop.parentloop.index0] == value %}selected="selected"{% endif %}
                  >
                    {{ value }}
                  </option>
                {% endfor %}
              </select>
            </div>
          </div>
        {% endfor %}

        <div class="mt-8">
          <button 
            type="submit" 
            class="w-full px-6 py-3 rounded-md flex items-center justify-center space-x-2 transition-colors {% if current_variant.available %}bg-gray-900 hover:bg-gray-800 text-white{% else %}bg-gray-200 text-gray-500 cursor-not-allowed{% endif %}"
            {% unless current_variant.available %}disabled{% endunless %}
          >
            <span class="loading-hidden">
              {% if current_variant.available %}
                Add to Cart
              {% else %}
                Out of Stock
              {% endif %}
            </span>
            <span class="hidden loading-visible">Adding...</span>
          </button>
        </div>
      </form>

      <div class="mt-10">
        <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
          <div class="flex items-start space-x-3">
            <div>
              <h3 class="text-sm font-medium text-gray-900">Sustainable</h3>
              <p class="mt-1 text-sm text-gray-500">Give your old skateboard a second life</p>
            </div>
          </div>
          <div class="flex items-start space-x-3">
            <div>
              <h3 class="text-sm font-medium text-gray-900">Easy Install</h3>
              <p class="mt-1 text-sm text-gray-500">No drilling needed</p>
            </div>
          </div>
        </div>
      </div>

      <div class="mt-10 prose prose-sm">
        <h3 class="text-lg font-medium text-gray-900">Description</h3>
        <div class="mt-4 space-y-6">
          {{ product.description }}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
const variantImages = {};

{% for variant in product.variants %}
  {% if variant.featured_image %}
    variantImages[{{ variant.id }}] = {
      id: {{ variant.featured_image.id }},
      url: {{ variant.featured_image | img_url: 'large' | json }},
      alt: {{ variant.featured_image.alt | json }}
    };
  {% endif %}
{% endfor %}

function updateMainImage(thumbnail, newSrc, newAlt) {
  const mainImage = document.getElementById('main-product-image');
  mainImage.src = newSrc;
  mainImage.alt = newAlt;
  
  document.querySelectorAll('[onclick^="updateMainImage"]').forEach(btn => {
    btn.classList.remove('ring-2', 'ring-gray-900');
  });
  thumbnail.classList.add('ring-2', 'ring-gray-900');
}

function handleVariantChange(event) {
  const select = event.target;
  const form = select.closest('form');
  const selects = form.querySelectorAll('select');
  const selectedOptions = Array.from(selects).map(select => select.value);
  
  const matchingVariant = window.variants.find(variant => 
    variant.options.every((option, index) => option === selectedOptions[index])
  );
  
  if (matchingVariant) {
    // Update variant ID
    document.getElementById('variant-id').value = matchingVariant.id;
    
    // Update add to cart button state
    const submitButton = form.querySelector('[type="submit"]');
    if (matchingVariant.available) {
      submitButton.classList.remove('bg-gray-200', 'text-gray-500', 'cursor-not-allowed');
      submitButton.classList.add('bg-gray-900', 'hover:bg-gray-800', 'text-white');
      submitButton.querySelector('.loading-hidden').textContent = 'Add to Cart';
      submitButton.disabled = false;
    } else {
      submitButton.classList.remove('bg-gray-900', 'hover:bg-gray-800', 'text-white');
      submitButton.classList.add('bg-gray-200', 'text-gray-500', 'cursor-not-allowed');
      submitButton.querySelector('.loading-hidden').textContent = 'Out of Stock';
      submitButton.disabled = true;
    }
    
    // Update variant image if available
    if (variantImages[matchingVariant.id]) {
      const image = variantImages[matchingVariant.id];
      const mainImage = document.getElementById('main-product-image');
      mainImage.src = image.url;
      mainImage.alt = image.alt;
      
      const thumbnail = document.querySelector(`[data-image-id="${image.id}"]`);
      if (thumbnail) {
        document.querySelectorAll('[onclick^="updateMainImage"]').forEach(btn => {
          btn.classList.remove('ring-2', 'ring-gray-900');
        });
        thumbnail.classList.add('ring-2', 'ring-gray-900');
      }
    }
  }
}
</script>

{{ 'product-form.js' | asset_url | script_tag }}

{% schema %}
{
  "name": "Product",
  "settings": []
}
{% endschema %}